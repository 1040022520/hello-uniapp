<template>
	<view class="calendar-content" v-if="showCalendar">
		<text class="example-info">日历组件可以查看日期，选择任意范围内的日期，打点操作。常用场景如：酒店日期预订、火车机票选择购买日期、上下班打卡等。</text>
		<uni-section title="日历组件" type="line"></uni-section>
		<view>
			<!-- 插入模式 -->
			<uni-calendar :insert="true" :lunar="tags[0].checked" :disable-before="tags[3].checked" :range="tags[5].checked" :start-date="startDate" :end-date="endDate" :date="date" :selected="selected" @change="change" />
			<view class="calendar-tags-group example-body">
				<view v-for="(item, index) in tags" :key="index" class="calendar-tags">
					<text class="calendar-tags-item" :class="{ checked: item.checked }" @click="toggle(index, item)">{{ item.name }}</text>
				</view>
				<view class="calendar-tags">
					<text class="calendar-tags-item calendar-button" @click="open">打开日历</text>
				</view>
			</view>
			<view :class="[infoShow?'calendar-content-active':'calendar-content-no']"></view>
			<!-- <button class="calendar-button" type="button" @click="open">打开日历</button> -->
			<view :class="{ 'calendar-active': infoShow }" class="calendar-box">
				<view v-if="timeData.lunar" class="calendar-info-header">
					<text class="calendar-title">已选日期详情</text>
					<text class="info-header-right" @click="retract">{{ infoShow ? '收起' : '展开' }}</text>
				</view>
				<scroll-view scroll-y v-if="timeData.lunar" class="calendar-info">
					<view><text class="calendar-info-text">当前选择时间 : {{ timeData.fulldate }}</text></view>
					<view><text v-if="tags[0].checked" class="calendar-info-text">农历日期 : {{ timeData.year + '年' + timeData.month + '月' + timeData.date + '日 （' + timeData.lunar.astro + ')' }}</text></view>
					<view><text v-if="tags[0].checked" class="calendar-info-text">{{ timeData.lunar.gzYear + '年' + timeData.lunar.gzMonth + '月' + timeData.lunar.gzDay + '日 (' + timeData.lunar.Animal + '年)' + timeData.lunar.IMonthCn + timeData.lunar.IDayCn + ( timeData.lunar.isTerm ? timeData.lunar.Term : '')}}</text></view>
					<view> <text class="calendar-info-text">是否打点 : {{ timeData.clockinfo.have ? '是' : '否' }}</text></view>
					<view><text v-if="timeData.clockinfo.have" class="calendar-info-text">打点信息 : {{ timeData.clockinfo.info || '' }}</text></view>
					<view><text v-if="timeData.clockinfo.have" class="calendar-info-text">打点额外信息 : {{ JSON.stringify(timeData.clockinfo.data) || '' }}</text></view>
					<view><text v-if="tags[5].checked" class="calendar-info-text">范围选择开始时间 : {{ timeData.range.begin || '' }}</text></view>
					<view><text v-if="tags[5].checked" class="calendar-info-text">范围选择结束时间 : {{ timeData.range.end || '' }}</text></view>
					<view><text v-if="tags[5].checked" class="calendar-info-text">范围日期 : {{ JSON.stringify(timeData.range.data) || '' }}</text></view>
				</scroll-view>
			</view>
		</view>

		<uni-calendar ref="calendar" :lunar="tags[0].checked" :disable-before="tags[3].checked" :range="tags[5].checked" :start-date="startDate" :end-date="endDate" :date="date" :selected="selected" @confirm="confirm" @change="change" />
	</view>
</template>

<script>
	import uniSection from '@/components/uni-section/uni-section.vue'
	import uniCalendar from '@/components/uni-calendar/uni-calendar.vue'
	export default {
		components: {
			uniSection,
			uniCalendar
		},
		data() {
			/**
			 * 时间计算
			 */
			function getDate(date, AddMonthCount = 0, AddDayCount = 0) {
				if (typeof date !== 'object') {
					date = date.replace(/-/g, '/')
				}
				let dd = new Date(date)
				dd.setMonth(dd.getMonth() + AddMonthCount) // 获取AddDayCount天后的日期
				dd.setDate(dd.getDate() + AddDayCount) // 获取AddDayCount天后的日期
				let y = dd.getFullYear()
				let m = dd.getMonth() + 1 < 10 ? '0' + (dd.getMonth() + 1) : dd.getMonth() + 1 // 获取当前月份的日期，不足10补0
				let d = dd.getDate() < 10 ? '0' + dd.getDate() : dd.getDate() // 获取当前几号，不足10补0
				return y + '-' + m + '-' + d
			}
			let tags = [{
					id: 0,
					name: '农历',
					checked: false,
					attr: 'lunar'
				},
				{
					id: 1,
					name: '开始日期(' + getDate(new Date(), -1) + ')',
					checked: false,
					value: getDate(new Date(), -1),
					attr: 'startDate'
				},
				{
					id: 2,
					name: '结束日期(' + getDate(new Date(), 2) + ')',
					value: getDate(new Date(), 2),
					checked: false,
					attr: 'endDate'
				},
				{
					id: 3,
					name: '禁用今天之前的日期',
					checked: false,
					attr: 'disableBefore'
				},
				{
					id: 4,
					name: '自定义当前日期(' + getDate(new Date(), 1) + ')',
					value: getDate(new Date(), 1),
					checked: false,
					attr: 'date'
				},
				{
					id: 5,
					name: '范围选择',
					checked: false,
					attr: 'range'
				},
				{
					id: 6,
					name: '打点',
					value: [{
							date: getDate(new Date(), 0, -1),
							info: '打卡'
						},
						{
							date: getDate(new Date(), 0),
							info: '签到',
							data: {
								custom: '自定义信息',
								name: '自定义消息头'
							}
						},
						{
							date: getDate(new Date(), 0, 1),
							info: '已打卡'
						}
					],
					checked: false,
					attr: 'selected'
				}
			]

			return {
				tags,
				date: '',
				startDate: '',
				endDate: '',
				timeData: {
					clockinfo: '',
					date: '',
					fulldate: '',
					lunar: '',
					month: '',
					range: '',
					year: ''
				},
				selected: [],
				infoShow: false,
				showCalendar: false
			}
		},
		onReady() {
			this.$nextTick(() => {
				this.showCalendar = true
			})
		},
		methods: {
			toggle(index, item) {
				this.tags[index].checked = !item.checked
				this.reckon()
			},
			open() {
				this.reckon()
				this.$refs.calendar.open()
			},
			reckon() {
				if (this.tags[1].checked) {
					this.startDate = this.tags[1].value
				} else {
					this.startDate = ''
				}
				if (this.tags[2].checked) {
					this.endDate = this.tags[2].value
				} else {
					this.endDate = ''
				}
				if (this.tags[4].checked) {
					this.date = this.tags[4].value
				} else {
					this.date = ''
				}
				if (this.tags[6].checked) {
					this.selected = this.tags[6].value
				} else {
					this.selected = []
				}
			},
			change(e) {
				console.log('change 返回:', e)
				this.timeData = e
				this.infoShow = true
			},
			confirm(e) {
				console.log('confirm 返回:', e)
				this.timeData = e
				this.infoShow = true
			},
			retract() {
				this.infoShow = !this.infoShow
			}
		}
	}
</script>

<style>
	/* 头条小程序组件内不能引入字体 */
	/* #ifdef MP-TOUTIAO */
	@font-face {
		font-family: uniicons;
		font-weight: normal;
		font-style: normal;
		src: url('~@/static/uni.ttf') format('truetype');
	}

	/* #endif */

	/* #ifndef APP-NVUE */
	page {
		display: flex;
		flex-direction: column;
		box-sizing: border-box;
		background-color: #efeff4;
		min-height: 100%;
		height: auto;
	}

	view {
		font-size: 28rpx;
		line-height: inherit;
	}

	.example {
		padding: 0 30rpx 30rpx;
	}

	.example-info {
		padding: 30rpx;
		color: #3b4144;
		background: #ffffff;
	}

	.example-body {
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center;
		padding: 0;
		font-size: 14rpx;
		background-color: #ffffff;
	}

	/* #endif */
	.example {
		padding: 0 30rpx;
	}

	.example-info {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		padding: 30rpx;
		color: #3b4144;
		background-color: #ffffff;
		font-size: 30rpx;
	}

	.example-info-text {
		font-size: 28rpx;
		line-height: 36rpx;
	}


	.example-body {
		flex-direction: column;
		padding: 30rpx;
		background-color: #ffffff;
	}

	.word-btn-white {
		font-size: 18px;
		color: #FFFFFF;
	}

	.word-btn {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
		border-radius: 6px;
		height: 48px;
		margin: 15px;
		background-color: #007AFF;
	}

	.word-btn--hover {
		background-color: #4ca2ff;
	}


	.calendar-content {
		font-size: 26rpx;
	}

	.calendar-content-active {
		height: 240px;
	}

	.calendar-content-no {
		height: 50px;
	}

	.calendar-tags-group {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		flex-direction: column;
		flex-wrap: wrap;
		justify-content: space-between;
	}

	.calendar-tags {
		flex: 1;
	}

	.calendar-tags-item {
		/* #ifndef APP-NVUE */
		display: block;
		/* #endif */
		padding: 20rpx 20rpx;
		border-color: rgba(0, 0, 0, 0.2);
		border-style: solid;
		border-width: 1px;
		color: #333;
		border-radius: 10rpx;
		text-align: center;
		margin: 10rpx;
		background-color: #f8f8f8;
		font-size: 28rpx;
	}

	.calendar-tags-item:active {
		background-color: #f8f8f8;
		color: #333;
	}

	.checked {
		background-color: rgb(0, 122, 255);
		color: #fff;
		border-color: rgba(0, 0, 0, 0.1);
		border-style: solid;
		border-width: 1px;

	}

	.calendar-button {
		flex: 1;
		font-weight: bold;
		font-size: 32rpx;
	}

	.calendar-button-groups {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		flex-direction: row;
		position: absolute;
		bottom: 0;
	}

	.calendar-button-confirm {
		width: 50%;
		margin: 10rpx;
		font-size: 32rpx;
		border-color: #eee;
		border-style: solid;
		border-width: 1px;
	}

	.calendar-box {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: #fff;
		transition-property: transform;
		transition-duration: 0.3s;
		transform: translateY(160px);
	}

	.calendar-active {
		transform: translateY(0);
	}

	.calendar-info-header {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		padding: 20rpx 30rpx;
		padding-left: 0;
		border-color: #eee;
		border-style: solid;
		border-top-width: 1px;
		border-bottom-width: 1px;

	}

	.calendar-title {
		/* height: 80rpx; */
		font-weight: bold;
		color: #666;
		font-size: 32rpx;
		border-left-style: solid;
		border-left-color: #0d9ebb;
		border-left-width: 2px;
		padding-left: 20rpx;
		margin: 0 20rpx;
	}

	.info-header-right {
		color: #444;
		font-size: 32rpx;
	}

	.calendar-info {
		border-color: #fff;
		border-style: solid;
		border-width: 1px;
		height: 160px;
		padding: 30rpx 30rpx;
		/* #ifndef APP-NVUE */
		box-sizing: border-box;
		/* #endif */
	}

	.calendar-info-text {
		font-size: 30rpx;
	}
</style>